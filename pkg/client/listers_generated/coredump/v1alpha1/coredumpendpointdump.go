/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/WanLinghao/coredump-detector/pkg/apis/coredump/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	coredumpapi "github.com/WanLinghao/api/coredump"
)

// CoredumpEndpointDumpLister helps list CoredumpEndpointDumps.
type CoredumpEndpointDumpLister interface {
	// List lists all CoredumpEndpointDumps in the indexer.
	List(selector labels.Selector) (ret []*coredumpapi.CoredumpEndpointDump, err error)
	// CoredumpEndpointDumps returns an object that can list and get CoredumpEndpointDumps.
	CoredumpEndpointDumps(namespace string) CoredumpEndpointDumpNamespaceLister
	CoredumpEndpointDumpListerExpansion
}

// coredumpEndpointDumpLister implements the CoredumpEndpointDumpLister interface.
type coredumpEndpointDumpLister struct {
	indexer cache.Indexer
}

// NewCoredumpEndpointDumpLister returns a new CoredumpEndpointDumpLister.
func NewCoredumpEndpointDumpLister(indexer cache.Indexer) CoredumpEndpointDumpLister {
	return &coredumpEndpointDumpLister{indexer: indexer}
}

// List lists all CoredumpEndpointDumps in the indexer.
func (s *coredumpEndpointDumpLister) List(selector labels.Selector) (ret []*coredumpapi.CoredumpEndpointDump, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*coredumpapi.CoredumpEndpointDump))
	})
	return ret, err
}

// CoredumpEndpointDumps returns an object that can list and get CoredumpEndpointDumps.
func (s *coredumpEndpointDumpLister) CoredumpEndpointDumps(namespace string) CoredumpEndpointDumpNamespaceLister {
	return coredumpEndpointDumpNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CoredumpEndpointDumpNamespaceLister helps list and get CoredumpEndpointDumps.
type CoredumpEndpointDumpNamespaceLister interface {
	// List lists all CoredumpEndpointDumps in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*coredumpapi.CoredumpEndpointDump, err error)
	// Get retrieves the CoredumpEndpointDump from the indexer for a given namespace and name.
	Get(name string) (*coredumpapi.CoredumpEndpointDump, error)
	CoredumpEndpointDumpNamespaceListerExpansion
}

// coredumpEndpointDumpNamespaceLister implements the CoredumpEndpointDumpNamespaceLister
// interface.
type coredumpEndpointDumpNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CoredumpEndpointDumps in the indexer for a given namespace.
func (s coredumpEndpointDumpNamespaceLister) List(selector labels.Selector) (ret []*coredumpapi.CoredumpEndpointDump, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*coredumpapi.CoredumpEndpointDump))
	})
	return ret, err
}

// Get retrieves the CoredumpEndpointDump from the indexer for a given namespace and name.
func (s coredumpEndpointDumpNamespaceLister) Get(name string) (*coredumpapi.CoredumpEndpointDump, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("coredumpendpointdump"), name)
	}
	return obj.(*coredumpapi.CoredumpEndpointDump), nil
}
