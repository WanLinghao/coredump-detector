// Code generated by protoc-gen-go. DO NOT EDIT.
// source: coredump.proto

package v1alpha1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Time is a wrapper around time.Time which supports correct
// marshaling to YAML and JSON.  Wrappers are provided for many
// of the factory methods that the time package offers.
//
// +protobuf.options.marshal=false
// +protobuf.as=Timestamp
// +protobuf.options.(gogoproto.goproto_stringer)=false
type Time struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds *int64 `protobuf:"varint,1,opt,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive. This field may be limited in precision depending on context.
	Nanos                *int32   `protobuf:"varint,2,opt,name=nanos" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{0}
}
func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (dst *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(dst, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *Time) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

// ListMeta describes metadata that synthetic resources must have, including lists and
// various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
type ListMeta struct {
	// selfLink is a URL representing this object.
	// Populated by the system.
	// Read-only.
	//
	// DEPRECATED
	// Kubernetes will stop propagating this field in 1.20 release and the field is planned
	// to be removed in 1.21 release.
	// +optional
	SelfLink *string `protobuf:"bytes,1,opt,name=selfLink" json:"selfLink,omitempty"`
	// String that identifies the server's internal version of this object that
	// can be used by clients to determine when objects have changed.
	// Value must be treated as opaque by clients and passed unmodified back to the server.
	// Populated by the system.
	// Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	// +optional
	ResourceVersion *string `protobuf:"bytes,2,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	// continue may be set if the user set a limit on the number of items returned, and indicates that
	// the server has more data available. The value is opaque and may be used to issue another request
	// to the endpoint that served this list to retrieve the next set of available objects. Continuing a
	// consistent list may not be possible if the server configuration has changed or more than a few
	// minutes have passed. The resourceVersion field returned when using this continue value will be
	// identical to the value in the first response, unless you have received this token from an error
	// message.
	Continue *string `protobuf:"bytes,3,opt,name=continue" json:"continue,omitempty"`
	// remainingItemCount is the number of subsequent items in the list which are not included in this
	// list response. If the list request contained label or field selectors, then the number of
	// remaining items is unknown and the field will be left unset and omitted during serialization.
	// If the list is complete (either because it is not chunking or because this is the last chunk),
	// then there are no more remaining items and this field will be left unset and omitted during
	// serialization.
	// Servers older than v1.15 do not set this field.
	// The intended use of the remainingItemCount is *estimating* the size of a collection. Clients
	// should not rely on the remainingItemCount to be set or to be exact.
	// +optional
	RemainingItemCount   *int64   `protobuf:"varint,4,opt,name=remainingItemCount" json:"remainingItemCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMeta) Reset()         { *m = ListMeta{} }
func (m *ListMeta) String() string { return proto.CompactTextString(m) }
func (*ListMeta) ProtoMessage()    {}
func (*ListMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{1}
}
func (m *ListMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeta.Unmarshal(m, b)
}
func (m *ListMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeta.Marshal(b, m, deterministic)
}
func (dst *ListMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeta.Merge(dst, src)
}
func (m *ListMeta) XXX_Size() int {
	return xxx_messageInfo_ListMeta.Size(m)
}
func (m *ListMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeta proto.InternalMessageInfo

func (m *ListMeta) GetSelfLink() string {
	if m != nil && m.SelfLink != nil {
		return *m.SelfLink
	}
	return ""
}

func (m *ListMeta) GetResourceVersion() string {
	if m != nil && m.ResourceVersion != nil {
		return *m.ResourceVersion
	}
	return ""
}

func (m *ListMeta) GetContinue() string {
	if m != nil && m.Continue != nil {
		return *m.Continue
	}
	return ""
}

func (m *ListMeta) GetRemainingItemCount() int64 {
	if m != nil && m.RemainingItemCount != nil {
		return *m.RemainingItemCount
	}
	return 0
}

// FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.
//
// Each key is either a '.' representing the field itself, and will always map to an empty set,
// or a string representing a sub-field or item. The string will follow one of these four formats:
// 'f:<name>', where <name> is the name of a field in a struct, or key in a map
// 'v:<value>', where <value> is the exact json formatted value of a list item
// 'i:<index>', where <index> is position of a item in a list
// 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
// If a key maps to an empty Fields value, the field that key represents is part of the set.
//
// The exact format is defined in sigs.k8s.io/structured-merge-diff
type FieldsV1 struct {
	// Raw is the underlying serialization of this object.
	Raw                  []byte   `protobuf:"bytes,1,opt,name=Raw" json:"Raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldsV1) Reset()         { *m = FieldsV1{} }
func (m *FieldsV1) String() string { return proto.CompactTextString(m) }
func (*FieldsV1) ProtoMessage()    {}
func (*FieldsV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{2}
}
func (m *FieldsV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldsV1.Unmarshal(m, b)
}
func (m *FieldsV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldsV1.Marshal(b, m, deterministic)
}
func (dst *FieldsV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldsV1.Merge(dst, src)
}
func (m *FieldsV1) XXX_Size() int {
	return xxx_messageInfo_FieldsV1.Size(m)
}
func (m *FieldsV1) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldsV1.DiscardUnknown(m)
}

var xxx_messageInfo_FieldsV1 proto.InternalMessageInfo

func (m *FieldsV1) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

// OwnerReference contains enough information to let you identify an owning
// object. An owning object must be in the same namespace as the dependent, or
// be cluster-scoped, so there is no namespace field.
type OwnerReference struct {
	// API version of the referent.
	ApiVersion *string `protobuf:"bytes,5,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// Kind of the referent.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// Name of the referent.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#names
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// UID of the referent.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	Uid *string `protobuf:"bytes,4,opt,name=uid" json:"uid,omitempty"`
	// If true, this reference points to the managing controller.
	// +optional
	Controller *bool `protobuf:"varint,6,opt,name=controller" json:"controller,omitempty"`
	// If true, AND if the owner has the "foregroundDeletion" finalizer, then
	// the owner cannot be deleted from the key-value store until this
	// reference is removed.
	// Defaults to false.
	// To set this field, a user needs "delete" permission of the owner,
	// otherwise 422 (Unprocessable Entity) will be returned.
	// +optional
	BlockOwnerDeletion   *bool    `protobuf:"varint,7,opt,name=blockOwnerDeletion" json:"blockOwnerDeletion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OwnerReference) Reset()         { *m = OwnerReference{} }
func (m *OwnerReference) String() string { return proto.CompactTextString(m) }
func (*OwnerReference) ProtoMessage()    {}
func (*OwnerReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{3}
}
func (m *OwnerReference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OwnerReference.Unmarshal(m, b)
}
func (m *OwnerReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OwnerReference.Marshal(b, m, deterministic)
}
func (dst *OwnerReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OwnerReference.Merge(dst, src)
}
func (m *OwnerReference) XXX_Size() int {
	return xxx_messageInfo_OwnerReference.Size(m)
}
func (m *OwnerReference) XXX_DiscardUnknown() {
	xxx_messageInfo_OwnerReference.DiscardUnknown(m)
}

var xxx_messageInfo_OwnerReference proto.InternalMessageInfo

func (m *OwnerReference) GetApiVersion() string {
	if m != nil && m.ApiVersion != nil {
		return *m.ApiVersion
	}
	return ""
}

func (m *OwnerReference) GetKind() string {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return ""
}

func (m *OwnerReference) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *OwnerReference) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *OwnerReference) GetController() bool {
	if m != nil && m.Controller != nil {
		return *m.Controller
	}
	return false
}

func (m *OwnerReference) GetBlockOwnerDeletion() bool {
	if m != nil && m.BlockOwnerDeletion != nil {
		return *m.BlockOwnerDeletion
	}
	return false
}

// ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
// that the fieldset applies to.
type ManagedFieldsEntry struct {
	// Manager is an identifier of the workflow managing these fields.
	Manager *string `protobuf:"bytes,1,opt,name=manager" json:"manager,omitempty"`
	// Operation is the type of operation which lead to this ManagedFieldsEntry being created.
	// The only valid values for this field are 'Apply' and 'Update'.
	Operation *string `protobuf:"bytes,2,opt,name=operation" json:"operation,omitempty"`
	// APIVersion defines the version of this resource that this field set
	// applies to. The format is "group/version" just like the top-level
	// APIVersion field. It is necessary to track the version of a field
	// set because it cannot be automatically converted.
	ApiVersion *string `protobuf:"bytes,3,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
	// +optional
	Time *Time `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	// FieldsType is the discriminator for the different fields format and version.
	// There is currently only one possible value: "FieldsV1"
	FieldsType *string `protobuf:"bytes,6,opt,name=fieldsType" json:"fieldsType,omitempty"`
	// FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
	// +optional
	FieldsV1             *FieldsV1 `protobuf:"bytes,7,opt,name=fieldsV1" json:"fieldsV1,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ManagedFieldsEntry) Reset()         { *m = ManagedFieldsEntry{} }
func (m *ManagedFieldsEntry) String() string { return proto.CompactTextString(m) }
func (*ManagedFieldsEntry) ProtoMessage()    {}
func (*ManagedFieldsEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{4}
}
func (m *ManagedFieldsEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManagedFieldsEntry.Unmarshal(m, b)
}
func (m *ManagedFieldsEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManagedFieldsEntry.Marshal(b, m, deterministic)
}
func (dst *ManagedFieldsEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManagedFieldsEntry.Merge(dst, src)
}
func (m *ManagedFieldsEntry) XXX_Size() int {
	return xxx_messageInfo_ManagedFieldsEntry.Size(m)
}
func (m *ManagedFieldsEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ManagedFieldsEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ManagedFieldsEntry proto.InternalMessageInfo

func (m *ManagedFieldsEntry) GetManager() string {
	if m != nil && m.Manager != nil {
		return *m.Manager
	}
	return ""
}

func (m *ManagedFieldsEntry) GetOperation() string {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return ""
}

func (m *ManagedFieldsEntry) GetApiVersion() string {
	if m != nil && m.ApiVersion != nil {
		return *m.ApiVersion
	}
	return ""
}

func (m *ManagedFieldsEntry) GetTime() *Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *ManagedFieldsEntry) GetFieldsType() string {
	if m != nil && m.FieldsType != nil {
		return *m.FieldsType
	}
	return ""
}

func (m *ManagedFieldsEntry) GetFieldsV1() *FieldsV1 {
	if m != nil {
		return m.FieldsV1
	}
	return nil
}

// ObjectMeta is metadata that all persisted resources must have, which includes all objects
// users must create.
type ObjectMeta struct {
	// Name must be unique within a namespace. Is required when creating resources, although
	// some resources may allow a client to request the generation of an appropriate name
	// automatically. Name is primarily intended for creation idempotence and configuration
	// definition.
	// Cannot be updated.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#names
	// +optional
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// GenerateName is an optional prefix, used by the server, to generate a unique
	// name ONLY IF the Name field has not been provided.
	// If this field is used, the name returned to the client will be different
	// than the name passed. This value will also be combined with a unique suffix.
	// The provided value has the same validation rules as the Name field,
	// and may be truncated by the length of the suffix required to make the value
	// unique on the server.
	//
	// If this field is specified and the generated name exists, the server will
	// NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
	// ServerTimeout indicating a unique name could not be found in the time allotted, and the client
	// should retry (optionally after the time indicated in the Retry-After header).
	//
	// Applied only if Name is not specified.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
	// +optional
	GenerateName *string `protobuf:"bytes,2,opt,name=generateName" json:"generateName,omitempty"`
	// Namespace defines the space within each name must be unique. An empty namespace is
	// equivalent to the "default" namespace, but "default" is the canonical representation.
	// Not all objects are required to be scoped to a namespace - the value of this field for
	// those objects will be empty.
	//
	// Must be a DNS_LABEL.
	// Cannot be updated.
	// More info: http://kubernetes.io/docs/user-guide/namespaces
	// +optional
	Namespace *string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	// SelfLink is a URL representing this object.
	// Populated by the system.
	// Read-only.
	//
	// DEPRECATED
	// Kubernetes will stop propagating this field in 1.20 release and the field is planned
	// to be removed in 1.21 release.
	// +optional
	SelfLink *string `protobuf:"bytes,4,opt,name=selfLink" json:"selfLink,omitempty"`
	// UID is the unique in time and space value for this object. It is typically generated by
	// the server on successful creation of a resource and is not allowed to change on PUT
	// operations.
	//
	// Populated by the system.
	// Read-only.
	// More info: http://kubernetes.io/docs/user-guide/identifiers#uids
	// +optional
	Uid *string `protobuf:"bytes,5,opt,name=uid" json:"uid,omitempty"`
	// An opaque value that represents the internal version of this object that can
	// be used by clients to determine when objects have changed. May be used for optimistic
	// concurrency, change detection, and the watch operation on a resource or set of resources.
	// Clients must treat these values as opaque and passed unmodified back to the server.
	// They may only be valid for a particular resource or set of resources.
	//
	// Populated by the system.
	// Read-only.
	// Value must be treated as opaque by clients and .
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	// +optional
	ResourceVersion *string `protobuf:"bytes,6,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	// A sequence number representing a specific generation of the desired state.
	// Populated by the system. Read-only.
	// +optional
	Generation *int64 `protobuf:"varint,7,opt,name=generation" json:"generation,omitempty"`
	// CreationTimestamp is a timestamp representing the server time when this object was
	// created. It is not guaranteed to be set in happens-before order across separate operations.
	// Clients may not set this value. It is represented in RFC3339 form and is in UTC.
	//
	// Populated by the system.
	// Read-only.
	// Null for lists.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	CreationTimestamp *Time `protobuf:"bytes,8,opt,name=creationTimestamp" json:"creationTimestamp,omitempty"`
	// DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
	// field is set by the server when a graceful deletion is requested by the user, and is not
	// directly settable by a client. The resource is expected to be deleted (no longer visible
	// from resource lists, and not reachable by name) after the time in this field, once the
	// finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
	// Once the deletionTimestamp is set, this value may not be unset or be set further into the
	// future, although it may be shortened or the resource may be deleted prior to this time.
	// For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
	// by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
	// the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
	// remove the pod from the API. In the presence of network partitions, this object may still
	// exist after this timestamp, until an administrator or automated process can determine the
	// resource is fully terminated.
	// If not set, graceful deletion of the object has not been requested.
	//
	// Populated by the system when a graceful deletion is requested.
	// Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	DeletionTimestamp *Time `protobuf:"bytes,9,opt,name=deletionTimestamp" json:"deletionTimestamp,omitempty"`
	// Number of seconds allowed for this object to gracefully terminate before
	// it will be removed from the system. Only set when deletionTimestamp is also set.
	// May only be shortened.
	// Read-only.
	// +optional
	DeletionGracePeriodSeconds *int64 `protobuf:"varint,10,opt,name=deletionGracePeriodSeconds" json:"deletionGracePeriodSeconds,omitempty"`
	// Map of string keys and values that can be used to organize and categorize
	// (scope and select) objects. May match selectors of replication controllers
	// and services.
	// More info: http://kubernetes.io/docs/user-guide/labels
	// +optional
	Labels map[string]string `protobuf:"bytes,11,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Annotations is an unstructured key value map stored with a resource that may be
	// set by external tools to store and retrieve arbitrary metadata. They are not
	// queryable and should be preserved when modifying objects.
	// More info: http://kubernetes.io/docs/user-guide/annotations
	// +optional
	Annotations map[string]string `protobuf:"bytes,12,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of objects depended by this object. If ALL objects in the list have
	// been deleted, this object will be garbage collected. If this object is managed by a controller,
	// then an entry in this list will point to this controller, with the controller field set to true.
	// There cannot be more than one managing controller.
	// +optional
	// +patchMergeKey=uid
	// +patchStrategy=merge
	OwnerReferences []*OwnerReference `protobuf:"bytes,13,rep,name=ownerReferences" json:"ownerReferences,omitempty"`
	// Must be empty before the object is deleted from the registry. Each entry
	// is an identifier for the responsible component that will remove the entry
	// from the list. If the deletionTimestamp of the object is non-nil, entries
	// in this list can only be removed.
	// +optional
	// +patchStrategy=merge
	Finalizers []string `protobuf:"bytes,14,rep,name=finalizers" json:"finalizers,omitempty"`
	// The name of the cluster which the object belongs to.
	// This is used to distinguish resources with same name and namespace in different clusters.
	// This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
	// +optional
	ClusterName *string `protobuf:"bytes,15,opt,name=clusterName" json:"clusterName,omitempty"`
	// ManagedFields maps workflow-id and version to the set of fields
	// that are managed by that workflow. This is mostly for internal
	// housekeeping, and users typically shouldn't need to set or
	// understand this field. A workflow can be the user's name, a
	// controller's name, or the name of a specific apply path like
	// "ci-cd". The set of fields is always in the version that the
	// workflow used when modifying the object.
	//
	// This field is alpha and can be changed or removed without notice.
	//
	// +optional
	ManagedFields        []*ManagedFieldsEntry `protobuf:"bytes,17,rep,name=managedFields" json:"managedFields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ObjectMeta) Reset()         { *m = ObjectMeta{} }
func (m *ObjectMeta) String() string { return proto.CompactTextString(m) }
func (*ObjectMeta) ProtoMessage()    {}
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{5}
}
func (m *ObjectMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectMeta.Unmarshal(m, b)
}
func (m *ObjectMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectMeta.Marshal(b, m, deterministic)
}
func (dst *ObjectMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectMeta.Merge(dst, src)
}
func (m *ObjectMeta) XXX_Size() int {
	return xxx_messageInfo_ObjectMeta.Size(m)
}
func (m *ObjectMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectMeta.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectMeta proto.InternalMessageInfo

func (m *ObjectMeta) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ObjectMeta) GetGenerateName() string {
	if m != nil && m.GenerateName != nil {
		return *m.GenerateName
	}
	return ""
}

func (m *ObjectMeta) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *ObjectMeta) GetSelfLink() string {
	if m != nil && m.SelfLink != nil {
		return *m.SelfLink
	}
	return ""
}

func (m *ObjectMeta) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *ObjectMeta) GetResourceVersion() string {
	if m != nil && m.ResourceVersion != nil {
		return *m.ResourceVersion
	}
	return ""
}

func (m *ObjectMeta) GetGeneration() int64 {
	if m != nil && m.Generation != nil {
		return *m.Generation
	}
	return 0
}

func (m *ObjectMeta) GetCreationTimestamp() *Time {
	if m != nil {
		return m.CreationTimestamp
	}
	return nil
}

func (m *ObjectMeta) GetDeletionTimestamp() *Time {
	if m != nil {
		return m.DeletionTimestamp
	}
	return nil
}

func (m *ObjectMeta) GetDeletionGracePeriodSeconds() int64 {
	if m != nil && m.DeletionGracePeriodSeconds != nil {
		return *m.DeletionGracePeriodSeconds
	}
	return 0
}

func (m *ObjectMeta) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ObjectMeta) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ObjectMeta) GetOwnerReferences() []*OwnerReference {
	if m != nil {
		return m.OwnerReferences
	}
	return nil
}

func (m *ObjectMeta) GetFinalizers() []string {
	if m != nil {
		return m.Finalizers
	}
	return nil
}

func (m *ObjectMeta) GetClusterName() string {
	if m != nil && m.ClusterName != nil {
		return *m.ClusterName
	}
	return ""
}

func (m *ObjectMeta) GetManagedFields() []*ManagedFieldsEntry {
	if m != nil {
		return m.ManagedFields
	}
	return nil
}

type CoredumpEndpointList struct {
	// Standard list metadata.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	// +optional
	Metadata *ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// List of pods.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md
	Items                []*CoredumpEndpoint `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CoredumpEndpointList) Reset()         { *m = CoredumpEndpointList{} }
func (m *CoredumpEndpointList) String() string { return proto.CompactTextString(m) }
func (*CoredumpEndpointList) ProtoMessage()    {}
func (*CoredumpEndpointList) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{6}
}
func (m *CoredumpEndpointList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoredumpEndpointList.Unmarshal(m, b)
}
func (m *CoredumpEndpointList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoredumpEndpointList.Marshal(b, m, deterministic)
}
func (dst *CoredumpEndpointList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoredumpEndpointList.Merge(dst, src)
}
func (m *CoredumpEndpointList) XXX_Size() int {
	return xxx_messageInfo_CoredumpEndpointList.Size(m)
}
func (m *CoredumpEndpointList) XXX_DiscardUnknown() {
	xxx_messageInfo_CoredumpEndpointList.DiscardUnknown(m)
}

var xxx_messageInfo_CoredumpEndpointList proto.InternalMessageInfo

func (m *CoredumpEndpointList) GetMetadata() *ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CoredumpEndpointList) GetItems() []*CoredumpEndpoint {
	if m != nil {
		return m.Items
	}
	return nil
}

type CoredumpEndpoint struct {
	// Standard object's metadata.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
	// +optional
	Metadata *ObjectMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// Specification of the desired behavior of the pod.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
	// +optional
	Spec *CoredumpEndpointSpec `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	// Most recently observed status of the pod.
	// This data may not be up to date.
	// Populated by the system.
	// Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
	// +optional
	Status               *CoredumpEndpointStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CoredumpEndpoint) Reset()         { *m = CoredumpEndpoint{} }
func (m *CoredumpEndpoint) String() string { return proto.CompactTextString(m) }
func (*CoredumpEndpoint) ProtoMessage()    {}
func (*CoredumpEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{7}
}
func (m *CoredumpEndpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoredumpEndpoint.Unmarshal(m, b)
}
func (m *CoredumpEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoredumpEndpoint.Marshal(b, m, deterministic)
}
func (dst *CoredumpEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoredumpEndpoint.Merge(dst, src)
}
func (m *CoredumpEndpoint) XXX_Size() int {
	return xxx_messageInfo_CoredumpEndpoint.Size(m)
}
func (m *CoredumpEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_CoredumpEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_CoredumpEndpoint proto.InternalMessageInfo

func (m *CoredumpEndpoint) GetMetadata() *ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *CoredumpEndpoint) GetSpec() *CoredumpEndpointSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *CoredumpEndpoint) GetStatus() *CoredumpEndpointStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type CoredumpEndpointSpec struct {
	PodUID               *string  `protobuf:"bytes,1,opt,name=podUID" json:"podUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoredumpEndpointSpec) Reset()         { *m = CoredumpEndpointSpec{} }
func (m *CoredumpEndpointSpec) String() string { return proto.CompactTextString(m) }
func (*CoredumpEndpointSpec) ProtoMessage()    {}
func (*CoredumpEndpointSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{8}
}
func (m *CoredumpEndpointSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoredumpEndpointSpec.Unmarshal(m, b)
}
func (m *CoredumpEndpointSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoredumpEndpointSpec.Marshal(b, m, deterministic)
}
func (dst *CoredumpEndpointSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoredumpEndpointSpec.Merge(dst, src)
}
func (m *CoredumpEndpointSpec) XXX_Size() int {
	return xxx_messageInfo_CoredumpEndpointSpec.Size(m)
}
func (m *CoredumpEndpointSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CoredumpEndpointSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CoredumpEndpointSpec proto.InternalMessageInfo

func (m *CoredumpEndpointSpec) GetPodUID() string {
	if m != nil && m.PodUID != nil {
		return *m.PodUID
	}
	return ""
}

type CoredumpEndpointStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CoredumpEndpointStatus) Reset()         { *m = CoredumpEndpointStatus{} }
func (m *CoredumpEndpointStatus) String() string { return proto.CompactTextString(m) }
func (*CoredumpEndpointStatus) ProtoMessage()    {}
func (*CoredumpEndpointStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_coredump_14dad7201b229488, []int{9}
}
func (m *CoredumpEndpointStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CoredumpEndpointStatus.Unmarshal(m, b)
}
func (m *CoredumpEndpointStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CoredumpEndpointStatus.Marshal(b, m, deterministic)
}
func (dst *CoredumpEndpointStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CoredumpEndpointStatus.Merge(dst, src)
}
func (m *CoredumpEndpointStatus) XXX_Size() int {
	return xxx_messageInfo_CoredumpEndpointStatus.Size(m)
}
func (m *CoredumpEndpointStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CoredumpEndpointStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CoredumpEndpointStatus proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Time)(nil), "v1alpha1.Time")
	proto.RegisterType((*ListMeta)(nil), "v1alpha1.ListMeta")
	proto.RegisterType((*FieldsV1)(nil), "v1alpha1.FieldsV1")
	proto.RegisterType((*OwnerReference)(nil), "v1alpha1.OwnerReference")
	proto.RegisterType((*ManagedFieldsEntry)(nil), "v1alpha1.ManagedFieldsEntry")
	proto.RegisterType((*ObjectMeta)(nil), "v1alpha1.ObjectMeta")
	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.ObjectMeta.AnnotationsEntry")
	proto.RegisterMapType((map[string]string)(nil), "v1alpha1.ObjectMeta.LabelsEntry")
	proto.RegisterType((*CoredumpEndpointList)(nil), "v1alpha1.CoredumpEndpointList")
	proto.RegisterType((*CoredumpEndpoint)(nil), "v1alpha1.CoredumpEndpoint")
	proto.RegisterType((*CoredumpEndpointSpec)(nil), "v1alpha1.CoredumpEndpointSpec")
	proto.RegisterType((*CoredumpEndpointStatus)(nil), "v1alpha1.CoredumpEndpointStatus")
}

func init() { proto.RegisterFile("coredump.proto", fileDescriptor_coredump_14dad7201b229488) }

var fileDescriptor_coredump_14dad7201b229488 = []byte{
	// 793 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x4e, 0xf4, 0x36,
	0x10, 0x55, 0xbe, 0xfd, 0xf9, 0x76, 0x27, 0xb0, 0x80, 0x85, 0x50, 0xb4, 0x42, 0x68, 0x15, 0xa9,
	0xd2, 0x5e, 0xad, 0x60, 0x2f, 0x2a, 0x5a, 0x55, 0x48, 0xe5, 0xa7, 0x08, 0x09, 0x4a, 0x65, 0x28,
	0xf7, 0x26, 0x99, 0xa5, 0xee, 0x26, 0x76, 0x64, 0x3b, 0x50, 0xfa, 0x2c, 0x7d, 0x8a, 0x5e, 0xf6,
	0x61, 0xaa, 0x3e, 0x4a, 0x65, 0x27, 0x21, 0xd9, 0xdd, 0xb4, 0xd2, 0x77, 0x67, 0x8f, 0xcf, 0x8c,
	0xcf, 0x99, 0x39, 0x4e, 0x60, 0x14, 0x49, 0x85, 0x71, 0x9e, 0x66, 0xb3, 0x4c, 0x49, 0x23, 0xc9,
	0xe0, 0xf5, 0x84, 0x25, 0xd9, 0x2f, 0xec, 0x24, 0xfc, 0x1a, 0xba, 0x8f, 0x3c, 0x45, 0x12, 0xc0,
	0x67, 0x8d, 0x91, 0x14, 0xb1, 0x0e, 0xbc, 0x89, 0x37, 0xed, 0xd0, 0x6a, 0x4b, 0xf6, 0xa1, 0x27,
	0x98, 0x90, 0x3a, 0xf8, 0x34, 0xf1, 0xa6, 0x3d, 0x5a, 0x6c, 0xc2, 0x3f, 0x3c, 0x18, 0xdc, 0x72,
	0x6d, 0xee, 0xd0, 0x30, 0x32, 0x86, 0x81, 0xc6, 0x64, 0x71, 0xcb, 0xc5, 0xd2, 0x65, 0x0f, 0xe9,
	0xc7, 0x9e, 0x4c, 0x61, 0x47, 0xa1, 0x96, 0xb9, 0x8a, 0xf0, 0x09, 0x95, 0xe6, 0x52, 0xb8, 0x42,
	0x43, 0xba, 0x1e, 0xb6, 0x55, 0x22, 0x29, 0x0c, 0x17, 0x39, 0x06, 0x9d, 0xa2, 0x4a, 0xb5, 0x27,
	0x33, 0x20, 0x0a, 0x53, 0xc6, 0x05, 0x17, 0x2f, 0x37, 0x06, 0xd3, 0x0b, 0x99, 0x0b, 0x13, 0x74,
	0x1d, 0xd3, 0x96, 0x93, 0xf0, 0x10, 0x06, 0x3f, 0x70, 0x4c, 0x62, 0xfd, 0x74, 0x42, 0x76, 0xa1,
	0x43, 0xd9, 0x9b, 0x23, 0xb6, 0x45, 0xed, 0x32, 0xfc, 0xcb, 0x83, 0xd1, 0xfd, 0x9b, 0x40, 0x45,
	0x71, 0x81, 0x0a, 0x45, 0x84, 0xe4, 0x08, 0x80, 0x65, 0xbc, 0x62, 0xd8, 0x73, 0xd7, 0x37, 0x22,
	0x84, 0x40, 0x77, 0xc9, 0x45, 0x5c, 0xca, 0x73, 0x6b, 0x1b, 0x13, 0x2c, 0xad, 0xc8, 0xba, 0xb5,
	0xbd, 0x2c, 0xe7, 0xb1, 0x63, 0x36, 0xa4, 0x76, 0x69, 0x2b, 0x5b, 0x19, 0x4a, 0x26, 0x09, 0xaa,
	0xa0, 0x3f, 0xf1, 0xa6, 0x03, 0xda, 0x88, 0x58, 0x69, 0xcf, 0x89, 0x8c, 0x96, 0x8e, 0xd0, 0x25,
	0x26, 0x68, 0x2c, 0x83, 0xcf, 0x0e, 0xd7, 0x72, 0x12, 0xfe, 0xe3, 0x01, 0xb9, 0x63, 0x82, 0xbd,
	0x60, 0x5c, 0x48, 0xbc, 0x12, 0x46, 0xbd, 0xdb, 0x01, 0xa6, 0x2e, 0xaa, 0x4a, 0x8e, 0xd5, 0x96,
	0x1c, 0xc2, 0x50, 0x66, 0xa8, 0x98, 0xa9, 0x7b, 0x5f, 0x07, 0xd6, 0x84, 0x77, 0x36, 0x84, 0x87,
	0xd0, 0x35, 0x3c, 0x45, 0xa7, 0xc8, 0x9f, 0x8f, 0x66, 0x95, 0x73, 0x66, 0xd6, 0x36, 0xd4, 0x9d,
	0xd9, 0x1a, 0x0b, 0x47, 0xe5, 0xf1, 0x3d, 0x43, 0x27, 0x71, 0x48, 0x1b, 0x11, 0x32, 0x83, 0xc1,
	0xa2, 0x9c, 0x86, 0x13, 0xe6, 0xcf, 0x49, 0x5d, 0xa7, 0x9a, 0x13, 0xfd, 0xc0, 0x84, 0x7f, 0xf7,
	0x01, 0xee, 0x9f, 0x7f, 0xc5, 0xa8, 0xb0, 0x57, 0xd5, 0x67, 0xaf, 0xd1, 0xe7, 0x10, 0xb6, 0x5e,
	0x50, 0x58, 0x11, 0xf8, 0xa3, 0x3d, 0x2b, 0x74, 0xad, 0xc4, 0xac, 0x70, 0x8b, 0xd5, 0x19, 0x8b,
	0xaa, 0x21, 0xd5, 0x81, 0x15, 0xd3, 0x76, 0xd7, 0x4c, 0x5b, 0x4e, 0xb1, 0x57, 0x4f, 0xb1, 0xc5,
	0xc6, 0xfd, 0x76, 0x1b, 0x1f, 0x01, 0x94, 0x2c, 0xaa, 0x39, 0x76, 0x68, 0x23, 0x42, 0xbe, 0x83,
	0xbd, 0x48, 0xa1, 0x5b, 0xdb, 0x16, 0x6a, 0xc3, 0xd2, 0x2c, 0x18, 0xb4, 0x76, 0x77, 0x13, 0x68,
	0xb3, 0xe3, 0xd2, 0x09, 0x75, 0xf6, 0xb0, 0x3d, 0x7b, 0x03, 0x48, 0xce, 0x60, 0x5c, 0x05, 0xaf,
	0x15, 0x8b, 0xf0, 0x27, 0x54, 0x5c, 0xc6, 0x0f, 0xe5, 0xc3, 0x07, 0xc7, 0xf5, 0x7f, 0x10, 0xe4,
	0x14, 0xfa, 0x09, 0x7b, 0xc6, 0x44, 0x07, 0xfe, 0xa4, 0x33, 0xf5, 0xe7, 0x93, 0xfa, 0xca, 0x7a,
	0x5e, 0xb3, 0x5b, 0x07, 0x71, 0xb6, 0xa4, 0x25, 0x9e, 0x5c, 0x83, 0xcf, 0x84, 0x90, 0xc6, 0xc9,
	0xd1, 0xc1, 0x96, 0x4b, 0xff, 0xaa, 0x35, 0xfd, 0xfb, 0x1a, 0x57, 0xd4, 0x68, 0x66, 0x92, 0x73,
	0xd8, 0x91, 0x2b, 0x4f, 0x57, 0x07, 0xdb, 0xae, 0x58, 0xd0, 0x28, 0xb6, 0x02, 0xa0, 0xeb, 0x09,
	0x85, 0x5f, 0x05, 0x4b, 0xf8, 0xef, 0xa8, 0x74, 0x30, 0x9a, 0x74, 0x0a, 0xbf, 0x56, 0x11, 0x32,
	0x01, 0x3f, 0x4a, 0x72, 0x6d, 0x50, 0x39, 0x6f, 0xed, 0xb8, 0x41, 0x37, 0x43, 0xe4, 0x1c, 0xb6,
	0xd3, 0xe6, 0x1b, 0x0c, 0xf6, 0x1c, 0x87, 0xc3, 0x9a, 0xc3, 0xe6, 0x13, 0xa5, 0xab, 0x29, 0xe3,
	0x6f, 0xc0, 0x6f, 0x74, 0xca, 0x7a, 0x6e, 0x89, 0xef, 0xa5, 0xc9, 0xed, 0xd2, 0x7e, 0x79, 0x5f,
	0x59, 0x92, 0x57, 0xe6, 0x2e, 0x36, 0xdf, 0x7e, 0x3a, 0xf5, 0xc6, 0x67, 0xb0, 0xbb, 0xde, 0xa5,
	0x2f, 0xc9, 0x0f, 0x7f, 0x83, 0xfd, 0x8b, 0xf2, 0x8f, 0x70, 0x25, 0xe2, 0x4c, 0x72, 0x61, 0xec,
	0xc7, 0xdc, 0x3e, 0xd4, 0x14, 0x0d, 0x8b, 0x99, 0x61, 0xae, 0xd0, 0xca, 0x43, 0xad, 0x3e, 0xf7,
	0xf4, 0x03, 0x43, 0x8e, 0xa1, 0xc7, 0x0d, 0xa6, 0xf6, 0xdf, 0x60, 0xe5, 0x8f, 0x6b, 0xf0, 0x7a,
	0x79, 0x5a, 0x00, 0xc3, 0x3f, 0x3d, 0xd8, 0x5d, 0x3f, 0x23, 0xc7, 0x1b, 0xd7, 0xee, 0xb7, 0x39,
	0xa3, 0x71, 0xf1, 0x1c, 0xba, 0x3a, 0xc3, 0xc8, 0x29, 0xf3, 0xe7, 0x47, 0xff, 0x7d, 0xef, 0x43,
	0x86, 0x11, 0x75, 0x58, 0x6b, 0x5e, 0x6d, 0x98, 0xc9, 0xb5, 0xfb, 0x16, 0xac, 0x98, 0x77, 0x23,
	0xcb, 0xe1, 0x68, 0x89, 0x0f, 0x67, 0x9b, 0xed, 0xb2, 0x75, 0xc9, 0x01, 0xf4, 0x33, 0x19, 0xff,
	0x7c, 0x73, 0x59, 0x76, 0xbd, 0xdc, 0x85, 0x01, 0x1c, 0xb4, 0x57, 0xfc, 0x37, 0x00, 0x00, 0xff,
	0xff, 0x76, 0xb8, 0x37, 0x7b, 0x89, 0x07, 0x00, 0x00,
}
